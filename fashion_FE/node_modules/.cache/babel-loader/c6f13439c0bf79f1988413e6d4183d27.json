{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar StringMultibyteModule = require('../internals/string-multibyte');\n\nvar codeAt = StringMultibyteModule.codeAt;\nvar charAt = StringMultibyteModule.charAt;\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR); // TODO: unify with String#@@iterator\n\nvar $StringIterator = createIteratorConstructor(function StringIterator(string) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: string,\n    index: 0\n  });\n}, 'String', function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return {\n    value: undefined,\n    done: true\n  };\n  point = charAt(string, index);\n  state.index += point.length;\n  return {\n    value: {\n      codePoint: codeAt(point, 0),\n      position: index\n    },\n    done: false\n  };\n}); // `String.prototype.codePoints` method\n// https://github.com/tc39/proposal-string-prototype-codepoints\n\n$({\n  target: 'String',\n  proto: true\n}, {\n  codePoints: function codePoints() {\n    return new $StringIterator(String(requireObjectCoercible(this)));\n  }\n});","map":null,"metadata":{},"sourceType":"script"}