{"ast":null,"code":"class Request {\n  //get all data from database - note that you'll need to use routing to determine sort criteria. Configure in router.\n  get(url) {\n    return fetch(url).then(res => res.json());\n  } //creates 1 new record\n\n\n  post(url, payload) {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n  } // deletes 1 record\n\n\n  delete(url) {\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } // patch updates 1 record\n\n\n  patch(url, payload) {\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n  }\n\n}\n\nexport default Request;","map":{"version":3,"sources":["/Users/ifeyinwakanu/side_projects/fashionApp/fashion_FE/src/helpers/request.js"],"names":["Request","get","url","fetch","then","res","json","post","payload","method","headers","body","JSON","stringify","delete","patch"],"mappings":"AAAA,MAAMA,OAAN,CAAc;AAEV;AACEC,EAAAA,GAAG,CAACC,GAAD,EAAM;AACP,WAAOC,KAAK,CAACD,GAAD,CAAL,CACNE,IADM,CACAC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADR,CAAP;AAED,GANO,CAQV;;;AACEC,EAAAA,IAAI,CAACL,GAAD,EAAMM,OAAN,EAAc;AAChB,WAAOL,KAAK,CAACD,GAAD,EAAM;AAChBO,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AAHU,KAAN,CAAZ;AAKD,GAfO,CAiBV;;;AACEM,EAAAA,MAAM,CAACZ,GAAD,EAAM;AACV,WAAOC,KAAK,CAACD,GAAD,EAAM;AAChBO,MAAAA,MAAM,EAAE,QADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAFO,KAAN,CAAZ;AAID,GAvBO,CAyBV;;;AACEK,EAAAA,KAAK,CAACb,GAAD,EAAMM,OAAN,EAAc;AACjB,WAAOL,KAAK,CAACD,GAAD,EAAM;AAChBO,MAAAA,MAAM,EAAE,OADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AAHU,KAAN,CAAZ;AAKD;;AAhCO;;AAoCV,eAAeR,OAAf","sourcesContent":["class Request {\n\n    //get all data from database - note that you'll need to use routing to determine sort criteria. Configure in router.\n      get(url) {\n        return fetch(url)\n        .then((res) => res.json());\n      }\n\n    //creates 1 new record\n      post(url, payload){\n        return fetch(url, {\n          method: \"POST\",\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(payload)\n        })\n      }\n\n    // deletes 1 record\n      delete(url) {\n        return fetch(url, {\n          method: \"DELETE\",\n          headers: {'Content-Type': 'application/json'}\n        })\n      }\n\n    // patch updates 1 record\n      patch(url, payload){\n        return fetch(url, {\n          method: \"PATCH\",\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(payload)\n        })\n      }\n\n    }\n\n    export default Request;\n"]},"metadata":{},"sourceType":"module"}