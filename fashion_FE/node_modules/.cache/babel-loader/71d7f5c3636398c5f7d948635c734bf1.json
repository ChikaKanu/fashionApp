{"ast":null,"code":"// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nvar Map = require('../modules/es.map');\n\nvar WeakMap = require('../modules/es.weak-map');\n\nvar create = require('../internals/object-create');\n\nvar isObject = require('../internals/is-object');\n\nvar Node = function Node() {\n  // keys\n  this.object = null;\n  this.symbol = null; // child nodes\n\n  this.primitives = null;\n  this.objectsByIndex = create(null);\n};\n\nNode.prototype.get = function (key, initializer) {\n  return this[key] || (this[key] = initializer());\n};\n\nNode.prototype.next = function (i, it, IS_OBJECT) {\n  var store = IS_OBJECT ? this.objectsByIndex[i] || (this.objectsByIndex[i] = new WeakMap()) : this.primitives || (this.primitives = new Map());\n  var entry = store.get(it);\n  if (!entry) store.set(it, entry = new Node());\n  return entry;\n};\n\nvar root = new Node();\n\nmodule.exports = function () {\n  var active = root;\n  var length = arguments.length;\n  var i, it; // for prevent leaking, start from objects\n\n  for (i = 0; i < length; i++) {\n    if (isObject(it = arguments[i])) active = active.next(i, it, true);\n  }\n\n  if (this === Object && active === root) throw TypeError('Composite keys must contain a non-primitive component');\n\n  for (i = 0; i < length; i++) {\n    if (!isObject(it = arguments[i])) active = active.next(i, it, false);\n  }\n\n  return active;\n};","map":null,"metadata":{},"sourceType":"script"}