{"ast":null,"code":"class Request {\n  //get all data from database - note that you'll need to use routing to determine sort criteria. Configure in router.\n  async get(url) {\n    const res = await fetch(url);\n    return await res.json();\n  } //creates 1 new record\n\n\n  post(url, payload) {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n  } // deletes 1 record\n\n\n  delete(url) {\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } // patch updates 1 record\n\n\n  patch(url, payload) {\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n  }\n\n}\n\nexport default Request;","map":{"version":3,"sources":["/Users/ifeyinwakanu/side_projects/fashionApp/fashion_FE/src/helpers/request.js"],"names":["Request","get","url","res","fetch","json","post","payload","method","headers","body","JSON","stringify","delete","patch"],"mappings":"AAAA,MAAMA,OAAN,CAAc;AAEV;AACA,QAAMC,GAAN,CAAUC,GAAV,EAAe;AACb,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,WAAO,MAAMC,GAAG,CAACE,IAAJ,EAAb;AACD,GANS,CAQV;;;AACEC,EAAAA,IAAI,CAACJ,GAAD,EAAMK,OAAN,EAAc;AAChB,WAAOH,KAAK,CAACF,GAAD,EAAM;AAChBM,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AAHU,KAAN,CAAZ;AAKD,GAfO,CAiBV;;;AACEM,EAAAA,MAAM,CAACX,GAAD,EAAM;AACV,WAAOE,KAAK,CAACF,GAAD,EAAM;AAChBM,MAAAA,MAAM,EAAE,QADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAFO,KAAN,CAAZ;AAID,GAvBO,CAyBV;;;AACEK,EAAAA,KAAK,CAACZ,GAAD,EAAMK,OAAN,EAAc;AACjB,WAAOH,KAAK,CAACF,GAAD,EAAM;AAChBM,MAAAA,MAAM,EAAE,OADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AAHU,KAAN,CAAZ;AAKD;;AAhCO;;AAoCV,eAAeP,OAAf","sourcesContent":["class Request {\n\n    //get all data from database - note that you'll need to use routing to determine sort criteria. Configure in router.\n    async get(url) {\n      const res = await fetch(url);\n      return await res.json();\n    }\n    \n    //creates 1 new record\n      post(url, payload){\n        return fetch(url, {\n          method: \"POST\",\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(payload)\n        })\n      }\n    \n    // deletes 1 record\n      delete(url) {\n        return fetch(url, {\n          method: \"DELETE\",\n          headers: {'Content-Type': 'application/json'}\n        })\n      }\n    \n    // patch updates 1 record\n      patch(url, payload){\n        return fetch(url, {\n          method: \"PATCH\",\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(payload)\n        })\n      }\n    \n    }\n    \n    export default Request;"]},"metadata":{},"sourceType":"module"}