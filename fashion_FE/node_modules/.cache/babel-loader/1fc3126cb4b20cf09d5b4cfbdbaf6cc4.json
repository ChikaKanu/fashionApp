{"ast":null,"code":"class Request {\n  //get all data from database - note that you'll need to use routing to determine sort criteria. Configure in router.\n  //creates 1 new record\n  post(url, payload) {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n  }\n\n  get(url) {\n    return fetch(url).then(res => res.json());\n  } // deletes 1 record\n\n\n  delete(url) {\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } // patch updates 1 record\n\n\n  patch(url, payload) {\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n  }\n\n}\n\nexport default Request;","map":{"version":3,"sources":["/Users/ifeyinwakanu/side_projects/fashionApp/fashion_FE/src/helpers/request.js"],"names":["Request","post","url","payload","fetch","method","headers","body","JSON","stringify","get","then","res","json","delete","patch"],"mappings":"AAAA,MAAMA,OAAN,CAAc;AAEV;AAEA;AACEC,EAAAA,IAAI,CAACC,GAAD,EAAMC,OAAN,EAAc;AAChB,WAAOC,KAAK,CAACF,GAAD,EAAM;AAChBG,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAHU,KAAN,CAAZ;AAKD;;AAEDO,EAAAA,GAAG,CAACR,GAAD,EAAK;AACN,WAAOE,KAAK,CAACF,GAAD,CAAL,CACNS,IADM,CACAC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADR,CAAP;AAED,GAhBO,CAkBV;;;AACEC,EAAAA,MAAM,CAACZ,GAAD,EAAM;AACV,WAAOE,KAAK,CAACF,GAAD,EAAM;AAChBG,MAAAA,MAAM,EAAE,QADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAFO,KAAN,CAAZ;AAID,GAxBO,CA0BV;;;AACES,EAAAA,KAAK,CAACb,GAAD,EAAMC,OAAN,EAAc;AACjB,WAAOC,KAAK,CAACF,GAAD,EAAM;AAChBG,MAAAA,MAAM,EAAE,OADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAHU,KAAN,CAAZ;AAKD;;AAjCO;;AAqCV,eAAeH,OAAf","sourcesContent":["class Request {\n\n    //get all data from database - note that you'll need to use routing to determine sort criteria. Configure in router.\n\n    //creates 1 new record\n      post(url, payload){\n        return fetch(url, {\n          method: \"POST\",\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(payload)\n        })\n      }\n\n      get(url){\n        return fetch(url)\n        .then((res) => res.json());\n      }\n\n    // deletes 1 record\n      delete(url) {\n        return fetch(url, {\n          method: \"DELETE\",\n          headers: {'Content-Type': 'application/json'}\n        })\n      }\n\n    // patch updates 1 record\n      patch(url, payload){\n        return fetch(url, {\n          method: \"PATCH\",\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(payload)\n        })\n      }\n\n    }\n\n    export default Request;\n"]},"metadata":{},"sourceType":"module"}