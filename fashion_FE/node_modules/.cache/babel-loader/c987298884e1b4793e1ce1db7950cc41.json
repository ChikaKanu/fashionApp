{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar toInteger = require('../internals/to-integer');\n\nvar parseInt = require('../internals/parse-int');\n\nvar INVALID_NUMBER_REPRESENTATION = 'Invalid number representation';\nvar INVALID_RADIX = 'Invalid radix';\nvar valid = /^[\\da-z]+$/; // `Number.fromString` method\n// https://github.com/tc39/proposal-number-fromstring\n\n$({\n  target: 'Number',\n  stat: true\n}, {\n  fromString: function fromString(string, radix) {\n    var sign = 1;\n    var R, mathNum;\n    if (typeof string != 'string') throw TypeError(INVALID_NUMBER_REPRESENTATION);\n    if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n\n    if (string.charAt(0) == '-') {\n      sign = -1;\n      string = string.slice(1);\n      if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n\n    R = radix === undefined ? 10 : toInteger(radix);\n    if (R < 2 || R > 36) throw RangeError(INVALID_RADIX);\n\n    if (!valid.test(string) || (mathNum = parseInt(string, R)).toString(R) !== string) {\n      throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n\n    return sign * mathNum;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}